---------------------------------------------
Baleen\\Migrations\\Timeline\\TimelineEmitter
---------------------------------------------

.. php:namespace: Baleen\\Migrations\\Timeline

.. php:class:: TimelineEmitter

    Dispatches Timeline events.

    .. php:attr:: eventDispatcher

        protected null|EventDispatcherInterface

    .. php:method:: dispatchCollectionBefore(VersionInterface $targetVersion, OptionsInterface $options, Linked $versions, Progress $progress = null)

        :type $targetVersion: VersionInterface
        :param $targetVersion:
        :type $options: OptionsInterface
        :param $options:
        :type $versions: Linked
        :param $versions:
        :type $progress: Progress
        :param $progress:
        :returns: \Symfony\Component\EventDispatcher\Event|void

    .. php:method:: dispatchCollectionAfter(VersionInterface $targetVersion, OptionsInterface $options, Linked $versions, Progress $progress = null)

        dispatchCollectionAfter.

        :type $targetVersion: VersionInterface
        :param $targetVersion:
        :type $options: OptionsInterface
        :param $options:
        :type $versions: Linked
        :param $versions:
        :type $progress: Progress
        :param $progress:
        :returns: \Symfony\Component\EventDispatcher\Event|void

    .. php:method:: dispatchMigrationBefore(VersionInterface $version, OptionsInterface $options, Progress $progress = null)

        dispatchMigrationBefore.

        :type $version: VersionInterface
        :param $version:
        :type $options: OptionsInterface
        :param $options:
        :type $progress: Progress
        :param $progress:
        :returns: \Symfony\Component\EventDispatcher\Event|void

    .. php:method:: dispatchMigrationAfter(VersionInterface $version, OptionsInterface $options, Progress $progress = null)

        dispatchMigrationAfter.

        :type $version: VersionInterface
        :param $version:
        :type $options: OptionsInterface
        :param $options:
        :type $progress: Progress
        :param $progress:
        :returns: \Symfony\Component\EventDispatcher\Event|void

    .. php:method:: getEventDispatcher()

        :returns: null|EventDispatcherInterface

    .. php:method:: setEventDispatcher(EventDispatcherInterface $eventDispatcher)

        :type $eventDispatcher: EventDispatcherInterface
        :param $eventDispatcher:

    .. php:method:: dispatchEvent($name, Event $event)

        Dispatches an event if an EventDispatcher is available.

        :param $name:
        :type $event: Event
        :param $event:
        :returns: Event
