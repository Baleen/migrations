--------------------------------------------------------
Baleen\\Migrations\\Version\\Collection\\IndexedVersions
--------------------------------------------------------

.. php:namespace: Baleen\\Migrations\\Version\\Collection

.. php:class:: IndexedVersions

    Class IndexedVersions.

    IMPROVE: this class has 11 methods. Consider refactoring it to keep number of methods under 10.

    .. php:attr:: items

        protected array

    .. php:attr:: resolver

        protected ResolverInterface

    .. php:attr:: cache

        protected string[]

    .. php:method:: __construct($versions = array(), ResolverInterface $resolver = null)

        :type $versions: array
        :param $versions:
        :type $resolver: ResolverInterface
        :param $resolver:

    .. php:method:: setResolver(ResolverInterface $resolver)

        :type $resolver: ResolverInterface
        :param $resolver:

    .. php:method:: getResolver()

        :returns: ResolverInterface

    .. php:method:: get($index, $defaultValue = null, $resolve = true, $cache = true)

        :type $index: mixed
        :param $index:
        :type $defaultValue: mixed
        :param $defaultValue: Will be returned if the index is not present at collection.
        :type $resolve: bool
        :param $resolve: Whether to use the resolver or not.
        :type $cache: bool
        :param $cache: Whether to use the cache or not. Forced to false if $resolve = false.
        :returns: Version|null Null if not present

    .. php:method:: resolve($alias, $cache = true)

        Resolves an alias in to a version

        :param $alias:
        :type $cache: bool|true
        :param $cache:
        :returns: Version|null

    .. php:method:: has($index, $resolve = false)

        Returns whether the index exists in the collection

        :param $index:
        :type $resolve: bool
        :param $resolve:
        :returns: bool

    .. php:method:: validate(Version $version)

        Returns true if the specified version is valid (can be added) to the
        collection. Otherwise, it MUST throw
        an exception.

        :type $version: Version
        :param $version:
        :returns: bool

    .. php:method:: invalidateCache()

        invalidateCache

    .. php:method:: add($version)

        :type $version: mixed
        :param $version:

    .. php:method:: remove($version)

        :param $version:

    .. php:method:: addOrReplace(Version $version)

        Adds a new version to the collection if it doesn't exist or replaces it if
        it does.

        :type $version: Version
        :param $version:

    .. php:method:: prev()

        Sets the internal items pointer to the previous item.

    .. php:method:: end()

        Sets the internal items pointer to the end of the array.

    .. php:method:: toArray()

        :returns: array
